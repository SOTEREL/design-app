# Generated by Django 3.0.3 on 2020-03-06 10:50

import api.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import jsonfield.fields
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Feature",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, default="", max_length=50)),
                ("description", models.TextField(blank=True, default="")),
                ("coordinates", jsonfield.fields.JSONField()),
                ("projection", models.CharField(default="EPSG:3857", max_length=50)),
                ("style", jsonfield.fields.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=30)),
                ("slug", models.SlugField()),
                (
                    "map_lng",
                    api.models.fields.LngField(
                        validators=[
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                            django.core.validators.MinValueValidator(-180),
                            django.core.validators.MaxValueValidator(180),
                        ]
                    ),
                ),
                (
                    "map_lat",
                    api.models.fields.LatField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(90),
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(90),
                        ]
                    ),
                ),
                ("map_zoom", models.PositiveSmallIntegerField(default=19)),
            ],
        ),
        migrations.CreateModel(
            name="Circle",
            fields=[
                (
                    "feature_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.Feature",
                    ),
                ),
                ("radius", models.PositiveSmallIntegerField()),
            ],
            options={"abstract": False},
            bases=("api.feature",),
        ),
        migrations.CreateModel(
            name="Line",
            fields=[
                (
                    "feature_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.Feature",
                    ),
                )
            ],
            options={"abstract": False},
            bases=("api.feature",),
        ),
        migrations.CreateModel(
            name="MultiPolygon",
            fields=[
                (
                    "feature_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.Feature",
                    ),
                )
            ],
            options={"abstract": False},
            bases=("api.feature",),
        ),
        migrations.CreateModel(
            name="Parcel",
            fields=[
                (
                    "feature_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.Feature",
                    ),
                ),
                (
                    "insee",
                    models.CharField(
                        max_length=5,
                        validators=[django.core.validators.MinLengthValidator(5)],
                    ),
                ),
                (
                    "section",
                    models.CharField(
                        max_length=2,
                        validators=[django.core.validators.MinLengthValidator(2)],
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        max_length=4,
                        validators=[django.core.validators.MinLengthValidator(4)],
                    ),
                ),
            ],
            bases=("api.feature",),
        ),
        migrations.CreateModel(
            name="Point",
            fields=[
                (
                    "feature_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.Feature",
                    ),
                )
            ],
            options={"abstract": False},
            bases=("api.feature",),
        ),
        migrations.CreateModel(
            name="Polygon",
            fields=[
                (
                    "feature_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="api.Feature",
                    ),
                )
            ],
            options={"abstract": False},
            bases=("api.feature",),
        ),
        migrations.AddField(
            model_name="feature",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.Project"
            ),
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="name")),
                ("slug", models.SlugField(verbose_name="slug")),
                ("active", models.BooleanField(default=True, verbose_name="active")),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="api.Category",
                        verbose_name="parent",
                    ),
                ),
            ],
            options={"verbose_name_plural": "categories"},
            managers=[("tree", django.db.models.manager.Manager())],
        ),
    ]
