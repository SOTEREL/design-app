# Generated by Django 3.1.3 on 2020-12-20 13:21

import colorfield.fields
import designs.models.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import djgeojson.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Design",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("slug", models.SlugField(unique=True)),
                ("map_center", djgeojson.fields.PointField()),
                ("map_zoom", models.PositiveSmallIntegerField(default=17)),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Element",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, default="")),
                ("needs", models.TextField(blank=True, default="")),
                ("contributions", models.TextField(blank=True, default="")),
                (
                    "design",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="designs.design"
                    ),
                ),
            ],
            options={"ordering": ["name"]},
            managers=[
                ("tagged", django.db.models.manager.Manager()),
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="ElementType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("description", models.TextField(blank=True, default="")),
                ("needs", models.TextField(blank=True, default="")),
                ("contributions", models.TextField(blank=True, default="")),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_designs.elementtype_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={"verbose_name_plural": "element types", "ordering": ["name"]},
            managers=[
                ("tagged", django.db.models.manager.Manager()),
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="MapElementTypeStyle",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                )
            ],
            options={
                "verbose_name": "style of map element type",
                "verbose_name_plural": "styles of map element types",
                "ordering": ["map_theme", "map_element_type"],
            },
        ),
        migrations.CreateModel(
            name="MapTheme",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="Shape",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "map_projection",
                    models.CharField(default="EPSG:3857", max_length=50),
                ),
                ("edit_zoom", models.PositiveSmallIntegerField(default=18)),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="polymorphic_designs.shape_set+",
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={"abstract": False, "base_manager_name": "objects"},
        ),
        migrations.CreateModel(
            name="Circle",
            fields=[
                (
                    "shape_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.shape",
                    ),
                ),
                ("geom", djgeojson.fields.PointField()),
                (
                    "radius",
                    models.FloatField(
                        default=1,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
            ],
            options={"abstract": False},
            bases=("designs.shape",),
        ),
        migrations.CreateModel(
            name="CircleStyle",
            fields=[
                (
                    "mapelementtypestyle_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.mapelementtypestyle",
                    ),
                ),
                (
                    "color",
                    colorfield.fields.ColorField(
                        default="#FFFFFF", help_text="A valid CSS color.", max_length=18
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=2)),
                (
                    "opacity",
                    models.PositiveSmallIntegerField(
                        default=100,
                        help_text="Zero means no stroke.",
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="opacity (%)",
                    ),
                ),
                (
                    "dash_array",
                    models.CharField(
                        blank=True,
                        help_text="Example: 5-5",
                        max_length=50,
                        validators=[designs.models.validators.validate_dash_array],
                    ),
                ),
                ("icon", models.ImageField(null=True, upload_to="")),
            ],
            options={"abstract": False},
            bases=("designs.mapelementtypestyle", models.Model),
        ),
        migrations.CreateModel(
            name="Line",
            fields=[
                (
                    "shape_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.shape",
                    ),
                ),
                ("geom", djgeojson.fields.LineStringField()),
            ],
            options={"abstract": False},
            bases=("designs.shape",),
        ),
        migrations.CreateModel(
            name="LineStyle",
            fields=[
                (
                    "mapelementtypestyle_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.mapelementtypestyle",
                    ),
                ),
                (
                    "color",
                    colorfield.fields.ColorField(
                        default="#FFFFFF", help_text="A valid CSS color.", max_length=18
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=2)),
                (
                    "opacity",
                    models.PositiveSmallIntegerField(
                        default=100,
                        help_text="Zero means no stroke.",
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="opacity (%)",
                    ),
                ),
                (
                    "dash_array",
                    models.CharField(
                        blank=True,
                        help_text="Example: 5-5",
                        max_length=50,
                        validators=[designs.models.validators.validate_dash_array],
                    ),
                ),
            ],
            options={"abstract": False},
            bases=("designs.mapelementtypestyle", models.Model),
        ),
        migrations.CreateModel(
            name="MapElement",
            fields=[
                (
                    "element_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.element",
                    ),
                )
            ],
            options={"abstract": False, "base_manager_name": "objects"},
            bases=("designs.element",),
            managers=[
                ("tagged", django.db.models.manager.Manager()),
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="MapElementType",
            fields=[
                (
                    "elementtype_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.elementtype",
                    ),
                ),
                (
                    "shape_ctype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="contenttypes.contenttype",
                        validators=[designs.models.validators.validate_shape_ctype],
                        verbose_name="shape type",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "map element types",
                "abstract": False,
                "base_manager_name": "objects",
            },
            bases=("designs.elementtype",),
            managers=[
                ("tagged", django.db.models.manager.Manager()),
                ("objects", django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name="MultiPolygon",
            fields=[
                (
                    "shape_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.shape",
                    ),
                ),
                ("geom", djgeojson.fields.MultiPolygonField()),
            ],
            options={"abstract": False},
            bases=("designs.shape",),
        ),
        migrations.CreateModel(
            name="Point",
            fields=[
                (
                    "shape_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.shape",
                    ),
                ),
                ("geom", djgeojson.fields.PointField()),
            ],
            options={"abstract": False},
            bases=("designs.shape",),
        ),
        migrations.CreateModel(
            name="PointStyle",
            fields=[
                (
                    "mapelementtypestyle_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.mapelementtypestyle",
                    ),
                ),
                ("icon", models.ImageField(null=True, upload_to="")),
            ],
            options={"abstract": False},
            bases=("designs.mapelementtypestyle", models.Model),
        ),
        migrations.CreateModel(
            name="Polygon",
            fields=[
                (
                    "shape_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.shape",
                    ),
                ),
                ("geom", djgeojson.fields.PolygonField()),
            ],
            options={"abstract": False},
            bases=("designs.shape",),
        ),
        migrations.CreateModel(
            name="PolygonStyle",
            fields=[
                (
                    "mapelementtypestyle_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="designs.mapelementtypestyle",
                    ),
                ),
                (
                    "color",
                    colorfield.fields.ColorField(
                        default="#FFFFFF", help_text="A valid CSS color.", max_length=18
                    ),
                ),
                ("weight", models.PositiveSmallIntegerField(default=2)),
                (
                    "opacity",
                    models.PositiveSmallIntegerField(
                        default=100,
                        help_text="Zero means no stroke.",
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="opacity (%)",
                    ),
                ),
                (
                    "dash_array",
                    models.CharField(
                        blank=True,
                        help_text="Example: 5-5",
                        max_length=50,
                        validators=[designs.models.validators.validate_dash_array],
                    ),
                ),
                (
                    "fill_color",
                    colorfield.fields.ColorField(
                        default="#FFFFFF", help_text="A valid CSS color.", max_length=18
                    ),
                ),
                (
                    "fill_opacity",
                    models.PositiveSmallIntegerField(
                        default=100,
                        help_text="Zero means no fill.",
                        validators=[django.core.validators.MaxValueValidator(100)],
                        verbose_name="fill opacity (%)",
                    ),
                ),
            ],
            options={"abstract": False},
            bases=("designs.mapelementtypestyle", models.Model),
        ),
        migrations.AddField(
            model_name="mapelementtypestyle",
            name="map_theme",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="styles",
                to="designs.maptheme",
            ),
        ),
        migrations.AddField(
            model_name="mapelementtypestyle",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_designs.mapelementtypestyle_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="element",
            name="element_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="designs.elementtype"
            ),
        ),
        migrations.AddField(
            model_name="element",
            name="polymorphic_ctype",
            field=models.ForeignKey(
                editable=False,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="polymorphic_designs.element_set+",
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="design",
            name="map_theme",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="designs.maptheme",
            ),
        ),
        migrations.CreateModel(
            name="Configuration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "default_map_theme",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="designs.maptheme",
                    ),
                ),
            ],
            options={"verbose_name": "site configuration"},
        ),
        migrations.AddField(
            model_name="shape",
            name="map_element",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="shape",
                to="designs.mapelement",
            ),
        ),
        migrations.AddField(
            model_name="mapelementtypestyle",
            name="map_element_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="styles",
                to="designs.mapelementtype",
            ),
        ),
    ]
